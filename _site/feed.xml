<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

    <channel>
        <title>AbhishekSubbu</title>
        <link>http://localhost:4000</link>
        <description>Sharing my thoughts on the Cloud</description>
        <lastBuildDate>Tue, 17 Mar 2020 15:51:31 +0530</lastBuildDate>
        
        <item>
            <title>Object Oriented Programming Principles</title>
            <link>
                http://localhost:4000/object-oriented-programming-principles/
            </link>
            <description>
                &lt;h2 id=&quot;history&quot;&gt;History&lt;/h2&gt;

&lt;p&gt;When programming languages were introduced into the industry, they were usually Procedural in nature. Procedural means line by line execution from top to bottom.&lt;/p&gt;

&lt;p&gt;For example, the procedure for making a phone call is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Pick up the phone&lt;/li&gt;
  &lt;li&gt;Unlock the phone&lt;/li...
            </description>
            <pubDate>Tue, 25 Feb 2020 00:00:00 +0530</pubDate>
            <guid>
                http://localhost:4000/object-oriented-programming-principles/
            </guid>
        </item>
        
        <item>
            <title>Polly Retry Policies</title>
            <link>
                http://localhost:4000/polly-retry-policies/
            </link>
            <description>
                &lt;p&gt;If you have followed my blog on implementing “Retries using Polly in .NET Core”, then this blog will make more sense to you. In this blog, we will understand how many different techniques of Retry policies can be used in Polly.&lt;/p&gt;

&lt;p&gt;There are 4 different ways in which Transient Error Policy can handle faults.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Retry&lt;/li&gt;
  &lt;li&gt...
            </description>
            <pubDate>Thu, 20 Feb 2020 00:00:00 +0530</pubDate>
            <guid>
                http://localhost:4000/polly-retry-policies/
            </guid>
        </item>
        
        <item>
            <title>Retries using Polly in .NET Core</title>
            <link>
                http://localhost:4000/retries-using-polly-in-net-core/
            </link>
            <description>
                &lt;p&gt;In this blog, we will look at a common scenario where we have to call an API endpoint and handle retries efficiently in .NET Core. For this purpose, we will be using a library called as “Polly“.&lt;/p&gt;

&lt;p&gt;Polly is a library that allows developers to express resilience and transient fault handling policies such as Retry, Circuit Breaker, Timeout, Bulkhead Isolation, and Fallba...
            </description>
            <pubDate>Wed, 19 Feb 2020 00:00:00 +0530</pubDate>
            <guid>
                http://localhost:4000/retries-using-polly-in-net-core/
            </guid>
        </item>
        
    </channel>
</rss>