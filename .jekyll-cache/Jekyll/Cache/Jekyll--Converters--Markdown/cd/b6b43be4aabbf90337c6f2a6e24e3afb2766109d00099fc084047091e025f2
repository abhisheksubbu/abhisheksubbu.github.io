I"µ<p><a href="https://serilog.net/">Serilog</a> is a logging implementation that can be plugged into ASP.NET Core. It supports structured logging API‚Äôs and receives log events from the ASP.NET Core framework class libraries. In this blog we will see how to configure Serilog in ASP.Net Core project.</p>

<ol>
  <li>Firstly, create a fresh ASP.NET Core MVC application.</li>
  <li>Add the ‚Äú<strong>Serilog.AspNetCore</strong>‚Äù Nuget package into the project.</li>
  <li>If needed, you can add top-level try-catch block in Program.cs (if you intend to log top level application logs related to host)
    <ul>
      <li>In the Main() method, we are creating the Serilog‚Äôs Log File
        <ul>
          <li>Specify the default log level [which is DEBUG in this case (line no.15)]</li>
          <li>Override logs from certain sources to avoid noise in the generated logs [line no.15 and 16]</li>
          <li>Enrich the log object with data from the HttpContext</li>
          <li>Specify where the log has to be written (like Console, Seq, etc)</li>
        </ul>
      </li>
      <li>In the CreateHostBuilder method, we are connecting the Serilog to the HostBuilder.</li>
    </ul>
  </li>
</ol>
:ET